@model Community.Models.Message

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Message</h4>

@{
    var users = ViewData["users"] as List<string>;
}
@{
    var Confirmation = ViewData["Confirmation"];
    <label>@Confirmation</label>
    <br />
}

@if (users != null)
{
    foreach (var user in users)
    {
    <tr>
        <td>
            @user;
        </td>
    </tr>
    }
}
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Reciever" class="control-label"></label>
                <input asp-for="Reciever" class="form-control" />
                <span asp-validation-for="Reciever" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="text" class="control-label"></label>
                <input asp-for="text" class="form-control" />
                <span asp-validation-for="text" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
